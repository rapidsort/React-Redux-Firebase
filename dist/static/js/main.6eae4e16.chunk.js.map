{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.jsx","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","store/actions/projectActions.jsx","App.js","serviceWorker.js","store/reducers/authReducer.jsx","store/reducers/projectReducer.jsx","store/reducers/rootReducer.jsx","config/fbConfig.jsx","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","singIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","signIn","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","path","component","exact","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6eae4e16.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nfunction SignedInLinks(props) {\n  return (\n    <div>\n      <ul className='right'>\n          <li><NavLink to='/create'>New Project</NavLink></li>\n          <li><span onClick={props.signOut}>Logout</span></li>\n          <li><NavLink to='/' className='btn btn-floating pink '>\n          {props.profile.initials}\n          </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\n\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    signOut: ()=>dispatch(signOut())\n  }\n}\n\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\n\nexport const signOut = () =>{\n  return (dispatch, getState, {getFirebase}) =>{\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(()=>{\n      dispatch({type: 'SIGNOUT_SUCCESS'});\n    });\n  }\n}\n\n\nexport const  signUp = (newUser)=>{\n  return (dispatch, getState, {getFirebase, getFirestore}) =>{\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp)=>{\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(()=>{\n      dispatch({type: 'SIGNUP_SUCCESS'});\n    }).catch((err)=>{\n      dispatch({type: 'SIGNUP_ERROR', err});\n    })\n  }\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom';\n\nfunction SignedOutLinks() {\n  return (\n    <div>\n      <ul className='right'>\n          <li><NavLink to='/signup'>SignUp</NavLink></li>\n          <li><NavLink to='/signin'>LogIn</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks;\n","import React from 'react'\nimport {Link} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\n\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\n\nconst  Navbar=(props)=> {\n  const {auth, profile} = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> :  <SignedOutLinks /> ;\n  return (\n    <nav className='nav-wrapper grey draken-3'>\n        <div className='container'>\n            <Link to='/' className='brand-logo'>FB</Link>\n            {links}\n        </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state)=>{\n  console.log(state);\n  return {\n    auth : state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)\n","import React from 'react'\nimport moment from 'moment';\n\nfunction Notifications(props) {\n  const {notifications} = props;\n  return (\n    <div className='section'>\n      <div className=\"card z-depth-0\">\n      <div className=\"card-content\">\n      <div className=\"card-title\">\n        Notifications\n      </div>\n      <ul className=\"notifications\">\n      {notifications && notifications.map( notification => {\n        return (\n          <li key={notification.id} className='mb-5'>\n           <span className='pink-text'>{notification.user} </span><br />\n           <span> {notification.content} </span><br />\n           <span className='grey-text note-date'>\n           {moment(notification.time.toDate()).fromNow()}\n           </span>\n          </li>\n        )\n      })}\n      </ul>\n      </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n","import React from 'react'\nimport moment from 'moment';\nfunction ProjectSummary({project}) {\n  return (\n    <div className='card z-depth-0 project-summary'>\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className='card-title'>{project.title}</span>\n                <p>Posted By {project.authorFirstName} {project.authorLastName}</p>\n                <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects})=> {\n    return (\n      <div className='project-list section'>\n        { projects && projects.map(project => {\n          return (\n            <Link to={'/project/' + project.id} key={project.id}>\n            <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n      </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react'\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\n\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nimport {Redirect} from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    const {projects, auth, notifications} = this.props;\n\n    if(!auth.uid) return <Redirect to='/signin' />;\n\n    return (\n      <div className='dashboard container'>\n        <div className='row'>\n            <div className='col s12 m6'>\n                <ProjectList projects={projects} />\n            </div>\n            <div className='col s12 m5 offset=m1'>\n                <Notifications notifications={notifications} />\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' , orderBy:['createdAt', \"desc\"]},\n    { collection: 'notifications', limit: 5, orderBy:['time', \"desc\"] }\n  ])\n)(Dashboard)","import React from 'react';\n\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport moment from 'moment';\nimport {Redirect} from 'react-router-dom';\n\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    // console.log(project);\n\n    if (!auth.uid) return <Redirect to='/signin' />\n\n\n    if(project){\n        return (\n          <div className=\"container section project-details\">\n              <div className=\"card z-depth-0\">\n                  <div className=\"card-content\">\n                  <span className='card-title'>{project.title}</span>\n                  <p>{project.content}</p>\n                  </div>\n                  <div className=\"card-action grey lighten-4 grey-text\">\n                  <div>Posted By {project.authorFirstName} {project.authorLastName}</div>\n                  <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                  </div>\n              </div>\n          </div>\n        )\n    }else{\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                    <p>Loading Project...</p>\n                    </div>\n                    </div>\n                </div>\n          )\n    }\n}\n\nconst mapStateToProps= (state, ownProps)=>{\n    // console.log(state);\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\n \nimport {Redirect} from 'react-router-dom';\n\n\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.singIn(this.state);\n  }\n\n\n  render() {\n    const { authError, auth } = this.props\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n          </div>\n        </form>\n\n        { authError ? <div className='red-text center'><p>{authError}</p></div> : null }\n        \n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state)=>{\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    singIn: (credentials)=>dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {signUp} from '../../store/actions/authActions';\n\nimport {Redirect} from 'react-router-dom';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.signUp(this.state);\n  }\n\n\n  render() {\n    const { auth, authError } = this.props\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor='firstName'>First Name</label>\n            <input type='text' id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor='lastName'>Last Name</label>\n            <input type='text' id='lastName' onChange={this.handleChange} />\n          </div>\n\n\n          <div className=\"input-field\">\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          </div>\n        </form>\n        { authError ? <div className='red-text center'><p>{authError}</p></div> : null }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state)=>{\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp) \n","import React, { Component } from 'react'\n\nimport {connect} from 'react-redux';\nimport {createProject} from '../../store/actions/projectActions';\n\nimport {Redirect} from 'react-router-dom';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n\n\n  handleChange = (e) =>{\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) =>{\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  }\n\n\n  render() {\n    const {auth} = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor='title'>Title</label>\n            <input type='text' id='title' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor='content'>Project Content</label>\n            <textarea className='materialize-textarea' id='content' onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) =>{\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState(). firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(()=>{\n            dispatch({type: 'CREATE_PROJECT', project: project});\n        }).catch((err)=>{\n            dispatch({type: 'CREATE_PROJECT_ERROR', err: err});\n        })\n    }\n}","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\n\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n\n\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route path='/' component={Dashboard} exact />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState={\n    authError: null\n}\n\nconst authReducer = (state= initState, action) =>{\n\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login Failed'\n            };\n\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            };\n\n        case 'SIGNOUT_SUCCESS':\n            console.log('SIGNOUT_SUCCESS');\n            return state;\n\n        case 'SIGNUP_ERROR':\n            return {\n                ...state,\n                authError: action.err.message\n            };\n\n        case 'SIGNUP_SUCCESS':\n            return {\n                ...state,\n                authError: null\n            };\n\n        default:\n            return state;\n    }\n\n}\n\nexport default authReducer;\n","const initState={\n    // projects:[\n    //     {id:1, title:'Title 1', content: 'content 1'},\n    //     {id:2, title:'Title 2', content: 'content 2'},\n    //     {id:3, title:'Title 3', content: 'content 3'}\n    // ]\n}\n\nconst projectReducer = (state= initState, action) =>{\n\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log(action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log(action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAmZ3ZqUycVeKR2L9HzW0YLYbJjH9-dewc\",\n    authDomain: \"readtappdb.firebaseapp.com\",\n    databaseURL: \"https://readtappdb.firebaseio.com\",\n    projectId: \"readtappdb\",\n    storageBucket: \"readtappdb.appspot.com\",\n    messagingSenderId: \"755796931686\"\n  };\n  firebase.initializeApp(config);\n  // firebase.firestore().settings({timestampsInSnapshots: true});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore,getFirestore} from 'redux-firestore';\nimport { reactReduxFirebase ,getFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nconst store = createStore(rootReducer, \n    compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true})\n    )\n    );\n\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n});\n\n\n"],"sourceRoot":""}